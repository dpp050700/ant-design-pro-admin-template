/* tslint:disable */
/* eslint-disable */
/**
 * chameleon service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: none@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import type {
  IdReq,
  OrderGenOrderSpecialDetailReq,
  OrderIdListRsp,
  OrderSpecialCancelBody,
  OrderSpecialCreateReq,
  OrderSpecialPayReq,
  RpcStatus,
  SpecialOrder,
  SpecialOrders,
  V1ErrCode,
} from '../models/index';
import {
  IdReqFromJSON,
  IdReqToJSON,
  OrderGenOrderSpecialDetailReqFromJSON,
  OrderGenOrderSpecialDetailReqToJSON,
  OrderIdListRspFromJSON,
  OrderIdListRspToJSON,
  OrderSpecialCancelBodyFromJSON,
  OrderSpecialCancelBodyToJSON,
  OrderSpecialCreateReqFromJSON,
  OrderSpecialCreateReqToJSON,
  OrderSpecialPayReqFromJSON,
  OrderSpecialPayReqToJSON,
  RpcStatusFromJSON,
  RpcStatusToJSON,
  SpecialOrderFromJSON,
  SpecialOrderToJSON,
  SpecialOrdersFromJSON,
  SpecialOrdersToJSON,
  V1ErrCodeFromJSON,
  V1ErrCodeToJSON,
} from '../models/index';

export interface OrderSpecialServiceGenOrderSpecialDetailRequest {
  body: OrderGenOrderSpecialDetailReq;
}

export interface OrderSpecialServiceOrderSpecialCancelRequest {
  id: string;
  body: OrderSpecialCancelBody;
}

export interface OrderSpecialServiceOrderSpecialCreateRequest {
  body: OrderSpecialCreateReq;
}

export interface OrderSpecialServiceOrderSpecialDeleteRequest {
  id: string;
}

export interface OrderSpecialServiceOrderSpecialDetailRequest {
  id: string;
}

export interface OrderSpecialServiceOrderSpecialFindRequest {
  orderBy?: string;
  pageLimit?: number;
  pageOffset?: number;
  userId?: string;
  roomId?: string;
  orderId?: string;
}

export interface OrderSpecialServiceOrderSpecialPayRequest {
  body: OrderSpecialPayReq;
}

export interface OrderSpecialServiceOrderSpecialPayOkRequest {
  body: IdReq;
}

export interface OrderSpecialServiceOrderSpecialUsedRequest {
  id: string;
  body: object;
}

/**
 *
 */
export class OrderSpecialServiceApi extends runtime.BaseAPI {
  /**
   * 生成订单详情
   */
  async orderSpecialServiceGenOrderSpecialDetailRaw(
    requestParameters: OrderSpecialServiceGenOrderSpecialDetailRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<SpecialOrder>> {
    if (requestParameters.body === null || requestParameters.body === undefined) {
      throw new runtime.RequiredError(
        'body',
        'Required parameter requestParameters.body was null or undefined when calling orderSpecialServiceGenOrderSpecialDetail.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request(
      {
        path: `/order_special/order_detail`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: OrderGenOrderSpecialDetailReqToJSON(requestParameters.body),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) => SpecialOrderFromJSON(jsonValue));
  }

  /**
   * 生成订单详情
   */
  async orderSpecialServiceGenOrderSpecialDetail(
    requestParameters: OrderSpecialServiceGenOrderSpecialDetailRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<SpecialOrder> {
    const response = await this.orderSpecialServiceGenOrderSpecialDetailRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }

  /**
   * 订单取消
   */
  async orderSpecialServiceOrderSpecialCancelRaw(
    requestParameters: OrderSpecialServiceOrderSpecialCancelRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<object>> {
    if (requestParameters.id === null || requestParameters.id === undefined) {
      throw new runtime.RequiredError(
        'id',
        'Required parameter requestParameters.id was null or undefined when calling orderSpecialServiceOrderSpecialCancel.',
      );
    }

    if (requestParameters.body === null || requestParameters.body === undefined) {
      throw new runtime.RequiredError(
        'body',
        'Required parameter requestParameters.body was null or undefined when calling orderSpecialServiceOrderSpecialCancel.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request(
      {
        path: `/order_special/order/{id}/status_cancel`.replace(
          `{${'id'}}`,
          encodeURIComponent(String(requestParameters.id)),
        ),
        method: 'PATCH',
        headers: headerParameters,
        query: queryParameters,
        body: OrderSpecialCancelBodyToJSON(requestParameters.body),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse<any>(response);
  }

  /**
   * 订单取消
   */
  async orderSpecialServiceOrderSpecialCancel(
    requestParameters: OrderSpecialServiceOrderSpecialCancelRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<object> {
    const response = await this.orderSpecialServiceOrderSpecialCancelRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }

  /**
   * 订单创建
   */
  async orderSpecialServiceOrderSpecialCreateRaw(
    requestParameters: OrderSpecialServiceOrderSpecialCreateRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<OrderIdListRsp>> {
    if (requestParameters.body === null || requestParameters.body === undefined) {
      throw new runtime.RequiredError(
        'body',
        'Required parameter requestParameters.body was null or undefined when calling orderSpecialServiceOrderSpecialCreate.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request(
      {
        path: `/order_special/order`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: OrderSpecialCreateReqToJSON(requestParameters.body),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) => OrderIdListRspFromJSON(jsonValue));
  }

  /**
   * 订单创建
   */
  async orderSpecialServiceOrderSpecialCreate(
    requestParameters: OrderSpecialServiceOrderSpecialCreateRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<OrderIdListRsp> {
    const response = await this.orderSpecialServiceOrderSpecialCreateRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }

  /**
   * 订单删除
   */
  async orderSpecialServiceOrderSpecialDeleteRaw(
    requestParameters: OrderSpecialServiceOrderSpecialDeleteRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<object>> {
    if (requestParameters.id === null || requestParameters.id === undefined) {
      throw new runtime.RequiredError(
        'id',
        'Required parameter requestParameters.id was null or undefined when calling orderSpecialServiceOrderSpecialDelete.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/order_special/order/{id}`.replace(
          `{${'id'}}`,
          encodeURIComponent(String(requestParameters.id)),
        ),
        method: 'DELETE',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse<any>(response);
  }

  /**
   * 订单删除
   */
  async orderSpecialServiceOrderSpecialDelete(
    requestParameters: OrderSpecialServiceOrderSpecialDeleteRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<object> {
    const response = await this.orderSpecialServiceOrderSpecialDeleteRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }

  /**
   * 订单详情
   */
  async orderSpecialServiceOrderSpecialDetailRaw(
    requestParameters: OrderSpecialServiceOrderSpecialDetailRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<SpecialOrder>> {
    if (requestParameters.id === null || requestParameters.id === undefined) {
      throw new runtime.RequiredError(
        'id',
        'Required parameter requestParameters.id was null or undefined when calling orderSpecialServiceOrderSpecialDetail.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/order_special/order/{id}`.replace(
          `{${'id'}}`,
          encodeURIComponent(String(requestParameters.id)),
        ),
        method: 'GET',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) => SpecialOrderFromJSON(jsonValue));
  }

  /**
   * 订单详情
   */
  async orderSpecialServiceOrderSpecialDetail(
    requestParameters: OrderSpecialServiceOrderSpecialDetailRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<SpecialOrder> {
    const response = await this.orderSpecialServiceOrderSpecialDetailRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }

  /**
   * 订单列表查询
   */
  async orderSpecialServiceOrderSpecialFindRaw(
    requestParameters: OrderSpecialServiceOrderSpecialFindRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<SpecialOrders>> {
    const queryParameters: any = {};

    if (requestParameters.orderBy !== undefined) {
      queryParameters['orderBy'] = requestParameters.orderBy;
    }

    if (requestParameters.pageLimit !== undefined) {
      queryParameters['page.limit'] = requestParameters.pageLimit;
    }

    if (requestParameters.pageOffset !== undefined) {
      queryParameters['page.offset'] = requestParameters.pageOffset;
    }

    if (requestParameters.userId !== undefined) {
      queryParameters['userId'] = requestParameters.userId;
    }

    if (requestParameters.roomId !== undefined) {
      queryParameters['roomId'] = requestParameters.roomId;
    }

    if (requestParameters.orderId !== undefined) {
      queryParameters['orderId'] = requestParameters.orderId;
    }

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/order_special/orders`,
        method: 'GET',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) => SpecialOrdersFromJSON(jsonValue));
  }

  /**
   * 订单列表查询
   */
  async orderSpecialServiceOrderSpecialFind(
    requestParameters: OrderSpecialServiceOrderSpecialFindRequest = {},
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<SpecialOrders> {
    const response = await this.orderSpecialServiceOrderSpecialFindRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }

  /**
   * 订单支付
   */
  async orderSpecialServiceOrderSpecialPayRaw(
    requestParameters: OrderSpecialServiceOrderSpecialPayRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<object>> {
    if (requestParameters.body === null || requestParameters.body === undefined) {
      throw new runtime.RequiredError(
        'body',
        'Required parameter requestParameters.body was null or undefined when calling orderSpecialServiceOrderSpecialPay.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request(
      {
        path: `/order_special/order_payment`,
        method: 'PATCH',
        headers: headerParameters,
        query: queryParameters,
        body: OrderSpecialPayReqToJSON(requestParameters.body),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse<any>(response);
  }

  /**
   * 订单支付
   */
  async orderSpecialServiceOrderSpecialPay(
    requestParameters: OrderSpecialServiceOrderSpecialPayRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<object> {
    const response = await this.orderSpecialServiceOrderSpecialPayRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }

  /**
   * 订单支付完成
   */
  async orderSpecialServiceOrderSpecialPayOkRaw(
    requestParameters: OrderSpecialServiceOrderSpecialPayOkRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<object>> {
    if (requestParameters.body === null || requestParameters.body === undefined) {
      throw new runtime.RequiredError(
        'body',
        'Required parameter requestParameters.body was null or undefined when calling orderSpecialServiceOrderSpecialPayOk.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request(
      {
        path: `/order_special/order_payment_ok`,
        method: 'PATCH',
        headers: headerParameters,
        query: queryParameters,
        body: IdReqToJSON(requestParameters.body),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse<any>(response);
  }

  /**
   * 订单支付完成
   */
  async orderSpecialServiceOrderSpecialPayOk(
    requestParameters: OrderSpecialServiceOrderSpecialPayOkRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<object> {
    const response = await this.orderSpecialServiceOrderSpecialPayOkRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }

  /**
   * 特色服务使用
   */
  async orderSpecialServiceOrderSpecialUsedRaw(
    requestParameters: OrderSpecialServiceOrderSpecialUsedRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<object>> {
    if (requestParameters.id === null || requestParameters.id === undefined) {
      throw new runtime.RequiredError(
        'id',
        'Required parameter requestParameters.id was null or undefined when calling orderSpecialServiceOrderSpecialUsed.',
      );
    }

    if (requestParameters.body === null || requestParameters.body === undefined) {
      throw new runtime.RequiredError(
        'body',
        'Required parameter requestParameters.body was null or undefined when calling orderSpecialServiceOrderSpecialUsed.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request(
      {
        path: `/order_special/order/{id}/status_used`.replace(
          `{${'id'}}`,
          encodeURIComponent(String(requestParameters.id)),
        ),
        method: 'PATCH',
        headers: headerParameters,
        query: queryParameters,
        body: requestParameters.body as any,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse<any>(response);
  }

  /**
   * 特色服务使用
   */
  async orderSpecialServiceOrderSpecialUsed(
    requestParameters: OrderSpecialServiceOrderSpecialUsedRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<object> {
    const response = await this.orderSpecialServiceOrderSpecialUsedRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }
}

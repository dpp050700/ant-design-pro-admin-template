/* tslint:disable */
/* eslint-disable */
/**
 * chameleon service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: none@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import type {
  RpcStatus,
  StreamResultOfWebsocketCreateRsp,
  V1ErrCode,
  WebsocketCreateReq,
} from '../models/index';
import {
  RpcStatusFromJSON,
  RpcStatusToJSON,
  StreamResultOfWebsocketCreateRspFromJSON,
  StreamResultOfWebsocketCreateRspToJSON,
  V1ErrCodeFromJSON,
  V1ErrCodeToJSON,
  WebsocketCreateReqFromJSON,
  WebsocketCreateReqToJSON,
} from '../models/index';

export interface WebsocketServiceCreateRequest {
  body: WebsocketCreateReq;
}

/**
 *
 */
export class WebsocketServiceApi extends runtime.BaseAPI {
  /**
   * 请求地址:http://localhost:8080/chameleon/api/ws
   * 创建WebSocket连接
   */
  async websocketServiceCreateRaw(
    requestParameters: WebsocketServiceCreateRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<StreamResultOfWebsocketCreateRsp>> {
    if (requestParameters.body === null || requestParameters.body === undefined) {
      throw new runtime.RequiredError(
        'body',
        'Required parameter requestParameters.body was null or undefined when calling websocketServiceCreate.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request(
      {
        path: `/ws`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: WebsocketCreateReqToJSON(requestParameters.body),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      StreamResultOfWebsocketCreateRspFromJSON(jsonValue),
    );
  }

  /**
   * 请求地址:http://localhost:8080/chameleon/api/ws
   * 创建WebSocket连接
   */
  async websocketServiceCreate(
    requestParameters: WebsocketServiceCreateRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<StreamResultOfWebsocketCreateRsp> {
    const response = await this.websocketServiceCreateRaw(requestParameters, initOverrides);
    return await response.value();
  }
}

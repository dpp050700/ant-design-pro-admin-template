/* tslint:disable */
/* eslint-disable */
/**
 * chameleon service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: none@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import type { RpcStatus, StoryAdminServiceUpdateStatusBody, V1ErrCode } from '../models/index';
import {
  RpcStatusFromJSON,
  RpcStatusToJSON,
  StoryAdminServiceUpdateStatusBodyFromJSON,
  StoryAdminServiceUpdateStatusBodyToJSON,
  V1ErrCodeFromJSON,
  V1ErrCodeToJSON,
} from '../models/index';

export interface StoryAdminServiceUpdateStatusRequest {
  id: string;
  body: StoryAdminServiceUpdateStatusBody;
}

/**
 *
 */
export class StoryAdminServiceApi extends runtime.BaseAPI {
  /**
   */
  async storyAdminServiceUpdateStatusRaw(
    requestParameters: StoryAdminServiceUpdateStatusRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<object>> {
    if (requestParameters.id === null || requestParameters.id === undefined) {
      throw new runtime.RequiredError(
        'id',
        'Required parameter requestParameters.id was null or undefined when calling storyAdminServiceUpdateStatus.',
      );
    }

    if (requestParameters.body === null || requestParameters.body === undefined) {
      throw new runtime.RequiredError(
        'body',
        'Required parameter requestParameters.body was null or undefined when calling storyAdminServiceUpdateStatus.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request(
      {
        path: `/story/stories/{id}:status`.replace(
          `{${'id'}}`,
          encodeURIComponent(String(requestParameters.id)),
        ),
        method: 'PATCH',
        headers: headerParameters,
        query: queryParameters,
        body: StoryAdminServiceUpdateStatusBodyToJSON(requestParameters.body),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse<any>(response);
  }

  /**
   */
  async storyAdminServiceUpdateStatus(
    requestParameters: StoryAdminServiceUpdateStatusRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<object> {
    const response = await this.storyAdminServiceUpdateStatusRaw(requestParameters, initOverrides);
    return await response.value();
  }
}

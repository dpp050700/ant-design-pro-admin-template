/* tslint:disable */
/* eslint-disable */
/**
 * chameleon service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: none@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import type {
  DeliverGoodsBody,
  IdRsp,
  RpcStatus,
  SaveRaffleReq,
  UpdateOrderStatusBody,
  UpdateVirtualGoodBody,
  V1ErrCode,
  VirtualGoodCreateReq,
  VirtualGoodExchangeRecords,
  VirtualGoodRaffleRecords,
} from '../models/index';
import {
  DeliverGoodsBodyFromJSON,
  DeliverGoodsBodyToJSON,
  IdRspFromJSON,
  IdRspToJSON,
  RpcStatusFromJSON,
  RpcStatusToJSON,
  SaveRaffleReqFromJSON,
  SaveRaffleReqToJSON,
  UpdateOrderStatusBodyFromJSON,
  UpdateOrderStatusBodyToJSON,
  UpdateVirtualGoodBodyFromJSON,
  UpdateVirtualGoodBodyToJSON,
  V1ErrCodeFromJSON,
  V1ErrCodeToJSON,
  VirtualGoodCreateReqFromJSON,
  VirtualGoodCreateReqToJSON,
  VirtualGoodExchangeRecordsFromJSON,
  VirtualGoodExchangeRecordsToJSON,
  VirtualGoodRaffleRecordsFromJSON,
  VirtualGoodRaffleRecordsToJSON,
} from '../models/index';

export interface VirtualGoodAdminServiceCreateVirtualGoodRequest {
  body: VirtualGoodCreateReq;
}

export interface VirtualGoodAdminServiceDeleteVirtualGoodRequest {
  id: string;
}

export interface VirtualGoodAdminServiceDeliverGoodsRequest {
  id: string;
  body: DeliverGoodsBody;
}

export interface VirtualGoodAdminServiceFindAllExchangeRecordRequest {
  userId?: string;
  pageLimit?: number;
  pageOffset?: number;
}

export interface VirtualGoodAdminServiceFindAllRaffleGoodsRequest {
  userId?: string;
  pageLimit?: number;
  pageOffset?: number;
}

export interface VirtualGoodAdminServiceSaveRaffleRequest {
  body: SaveRaffleReq;
}

export interface VirtualGoodAdminServiceUpdateOrderStatusRequest {
  id: string;
  body: UpdateOrderStatusBody;
}

export interface VirtualGoodAdminServiceUpdateVirtualGoodRequest {
  id: string;
  body: UpdateVirtualGoodBody;
}

/**
 *
 */
export class VirtualGoodAdminServiceApi extends runtime.BaseAPI {
  /**
   * 创建商品
   */
  async virtualGoodAdminServiceCreateVirtualGoodRaw(
    requestParameters: VirtualGoodAdminServiceCreateVirtualGoodRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<IdRsp>> {
    if (requestParameters.body === null || requestParameters.body === undefined) {
      throw new runtime.RequiredError(
        'body',
        'Required parameter requestParameters.body was null or undefined when calling virtualGoodAdminServiceCreateVirtualGood.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request(
      {
        path: `/virtual_good/virtual_good`,
        method: 'PUT',
        headers: headerParameters,
        query: queryParameters,
        body: VirtualGoodCreateReqToJSON(requestParameters.body),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) => IdRspFromJSON(jsonValue));
  }

  /**
   * 创建商品
   */
  async virtualGoodAdminServiceCreateVirtualGood(
    requestParameters: VirtualGoodAdminServiceCreateVirtualGoodRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<IdRsp> {
    const response = await this.virtualGoodAdminServiceCreateVirtualGoodRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }

  /**
   * 删除虚拟商品
   */
  async virtualGoodAdminServiceDeleteVirtualGoodRaw(
    requestParameters: VirtualGoodAdminServiceDeleteVirtualGoodRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<object>> {
    if (requestParameters.id === null || requestParameters.id === undefined) {
      throw new runtime.RequiredError(
        'id',
        'Required parameter requestParameters.id was null or undefined when calling virtualGoodAdminServiceDeleteVirtualGood.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/virtual_good/virtual_good/{id}`.replace(
          `{${'id'}}`,
          encodeURIComponent(String(requestParameters.id)),
        ),
        method: 'DELETE',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse<any>(response);
  }

  /**
   * 删除虚拟商品
   */
  async virtualGoodAdminServiceDeleteVirtualGood(
    requestParameters: VirtualGoodAdminServiceDeleteVirtualGoodRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<object> {
    const response = await this.virtualGoodAdminServiceDeleteVirtualGoodRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }

  /**
   * 去发货
   */
  async virtualGoodAdminServiceDeliverGoodsRaw(
    requestParameters: VirtualGoodAdminServiceDeliverGoodsRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<object>> {
    if (requestParameters.id === null || requestParameters.id === undefined) {
      throw new runtime.RequiredError(
        'id',
        'Required parameter requestParameters.id was null or undefined when calling virtualGoodAdminServiceDeliverGoods.',
      );
    }

    if (requestParameters.body === null || requestParameters.body === undefined) {
      throw new runtime.RequiredError(
        'body',
        'Required parameter requestParameters.body was null or undefined when calling virtualGoodAdminServiceDeliverGoods.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request(
      {
        path: `/virtual_good/virtual_good_order/{id}/deliver`.replace(
          `{${'id'}}`,
          encodeURIComponent(String(requestParameters.id)),
        ),
        method: 'PATCH',
        headers: headerParameters,
        query: queryParameters,
        body: DeliverGoodsBodyToJSON(requestParameters.body),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse<any>(response);
  }

  /**
   * 去发货
   */
  async virtualGoodAdminServiceDeliverGoods(
    requestParameters: VirtualGoodAdminServiceDeliverGoodsRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<object> {
    const response = await this.virtualGoodAdminServiceDeliverGoodsRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }

  /**
   * 查询所有兑换的商品
   */
  async virtualGoodAdminServiceFindAllExchangeRecordRaw(
    requestParameters: VirtualGoodAdminServiceFindAllExchangeRecordRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<VirtualGoodExchangeRecords>> {
    const queryParameters: any = {};

    if (requestParameters.userId !== undefined) {
      queryParameters['userId'] = requestParameters.userId;
    }

    if (requestParameters.pageLimit !== undefined) {
      queryParameters['page.limit'] = requestParameters.pageLimit;
    }

    if (requestParameters.pageOffset !== undefined) {
      queryParameters['page.offset'] = requestParameters.pageOffset;
    }

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/virtual_good/all_exchange_records`,
        method: 'GET',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      VirtualGoodExchangeRecordsFromJSON(jsonValue),
    );
  }

  /**
   * 查询所有兑换的商品
   */
  async virtualGoodAdminServiceFindAllExchangeRecord(
    requestParameters: VirtualGoodAdminServiceFindAllExchangeRecordRequest = {},
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<VirtualGoodExchangeRecords> {
    const response = await this.virtualGoodAdminServiceFindAllExchangeRecordRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }

  /**
   * 查询所有抽奖中奖商品
   */
  async virtualGoodAdminServiceFindAllRaffleGoodsRaw(
    requestParameters: VirtualGoodAdminServiceFindAllRaffleGoodsRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<VirtualGoodRaffleRecords>> {
    const queryParameters: any = {};

    if (requestParameters.userId !== undefined) {
      queryParameters['userId'] = requestParameters.userId;
    }

    if (requestParameters.pageLimit !== undefined) {
      queryParameters['page.limit'] = requestParameters.pageLimit;
    }

    if (requestParameters.pageOffset !== undefined) {
      queryParameters['page.offset'] = requestParameters.pageOffset;
    }

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/virtual_good/all_raffle_goods`,
        method: 'GET',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      VirtualGoodRaffleRecordsFromJSON(jsonValue),
    );
  }

  /**
   * 查询所有抽奖中奖商品
   */
  async virtualGoodAdminServiceFindAllRaffleGoods(
    requestParameters: VirtualGoodAdminServiceFindAllRaffleGoodsRequest = {},
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<VirtualGoodRaffleRecords> {
    const response = await this.virtualGoodAdminServiceFindAllRaffleGoodsRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }

  /**
   * 保存抽奖信息
   */
  async virtualGoodAdminServiceSaveRaffleRaw(
    requestParameters: VirtualGoodAdminServiceSaveRaffleRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<object>> {
    if (requestParameters.body === null || requestParameters.body === undefined) {
      throw new runtime.RequiredError(
        'body',
        'Required parameter requestParameters.body was null or undefined when calling virtualGoodAdminServiceSaveRaffle.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request(
      {
        path: `/virtual_good/raffles`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: SaveRaffleReqToJSON(requestParameters.body),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse<any>(response);
  }

  /**
   * 保存抽奖信息
   */
  async virtualGoodAdminServiceSaveRaffle(
    requestParameters: VirtualGoodAdminServiceSaveRaffleRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<object> {
    const response = await this.virtualGoodAdminServiceSaveRaffleRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }

  /**
   * 修改订单状态
   */
  async virtualGoodAdminServiceUpdateOrderStatusRaw(
    requestParameters: VirtualGoodAdminServiceUpdateOrderStatusRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<object>> {
    if (requestParameters.id === null || requestParameters.id === undefined) {
      throw new runtime.RequiredError(
        'id',
        'Required parameter requestParameters.id was null or undefined when calling virtualGoodAdminServiceUpdateOrderStatus.',
      );
    }

    if (requestParameters.body === null || requestParameters.body === undefined) {
      throw new runtime.RequiredError(
        'body',
        'Required parameter requestParameters.body was null or undefined when calling virtualGoodAdminServiceUpdateOrderStatus.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request(
      {
        path: `/virtual_good/virtual_good_order/{id}`.replace(
          `{${'id'}}`,
          encodeURIComponent(String(requestParameters.id)),
        ),
        method: 'PATCH',
        headers: headerParameters,
        query: queryParameters,
        body: UpdateOrderStatusBodyToJSON(requestParameters.body),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse<any>(response);
  }

  /**
   * 修改订单状态
   */
  async virtualGoodAdminServiceUpdateOrderStatus(
    requestParameters: VirtualGoodAdminServiceUpdateOrderStatusRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<object> {
    const response = await this.virtualGoodAdminServiceUpdateOrderStatusRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }

  /**
   * 修改商品
   */
  async virtualGoodAdminServiceUpdateVirtualGoodRaw(
    requestParameters: VirtualGoodAdminServiceUpdateVirtualGoodRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<object>> {
    if (requestParameters.id === null || requestParameters.id === undefined) {
      throw new runtime.RequiredError(
        'id',
        'Required parameter requestParameters.id was null or undefined when calling virtualGoodAdminServiceUpdateVirtualGood.',
      );
    }

    if (requestParameters.body === null || requestParameters.body === undefined) {
      throw new runtime.RequiredError(
        'body',
        'Required parameter requestParameters.body was null or undefined when calling virtualGoodAdminServiceUpdateVirtualGood.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request(
      {
        path: `/virtual_good/virtual_good/{id}`.replace(
          `{${'id'}}`,
          encodeURIComponent(String(requestParameters.id)),
        ),
        method: 'PUT',
        headers: headerParameters,
        query: queryParameters,
        body: UpdateVirtualGoodBodyToJSON(requestParameters.body),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse<any>(response);
  }

  /**
   * 修改商品
   */
  async virtualGoodAdminServiceUpdateVirtualGood(
    requestParameters: VirtualGoodAdminServiceUpdateVirtualGoodRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<object> {
    const response = await this.virtualGoodAdminServiceUpdateVirtualGoodRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }
}

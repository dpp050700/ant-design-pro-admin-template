/* tslint:disable */
/* eslint-disable */
/**
 * chameleon service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: none@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import type {
  CouponAdjustPointsReq,
  CouponCreateReq,
  CouponUserCouponReq,
  Coupons,
  IdRsp,
  RpcStatus,
  V1ErrCode,
} from '../models/index';
import {
  CouponAdjustPointsReqFromJSON,
  CouponAdjustPointsReqToJSON,
  CouponCreateReqFromJSON,
  CouponCreateReqToJSON,
  CouponUserCouponReqFromJSON,
  CouponUserCouponReqToJSON,
  CouponsFromJSON,
  CouponsToJSON,
  IdRspFromJSON,
  IdRspToJSON,
  RpcStatusFromJSON,
  RpcStatusToJSON,
  V1ErrCodeFromJSON,
  V1ErrCodeToJSON,
} from '../models/index';

export interface CouponServiceAdjustPointsRequest {
  body: CouponAdjustPointsReq;
}

export interface CouponServiceCreateRequest {
  body: CouponCreateReq;
}

export interface CouponServiceDestroyUserCouponRequest {
  body: CouponUserCouponReq;
}

export interface CouponServiceFindRequest {
  status?: string;
  kind?: CouponServiceFindKindEnum;
  currency?: string;
  pageLimit?: number;
  pageOffset?: number;
  allData?: boolean;
  userId?: string;
  costUsed?: boolean;
}

/**
 *
 */
export class CouponServiceApi extends runtime.BaseAPI {
  /**
   * 调整积分
   */
  async couponServiceAdjustPointsRaw(
    requestParameters: CouponServiceAdjustPointsRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<object>> {
    if (requestParameters.body === null || requestParameters.body === undefined) {
      throw new runtime.RequiredError(
        'body',
        'Required parameter requestParameters.body was null or undefined when calling couponServiceAdjustPoints.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request(
      {
        path: `/coupon/adjust_points`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: CouponAdjustPointsReqToJSON(requestParameters.body),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse<any>(response);
  }

  /**
   * 调整积分
   */
  async couponServiceAdjustPoints(
    requestParameters: CouponServiceAdjustPointsRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<object> {
    const response = await this.couponServiceAdjustPointsRaw(requestParameters, initOverrides);
    return await response.value();
  }

  /**
   * 创建
   */
  async couponServiceCreateRaw(
    requestParameters: CouponServiceCreateRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<IdRsp>> {
    if (requestParameters.body === null || requestParameters.body === undefined) {
      throw new runtime.RequiredError(
        'body',
        'Required parameter requestParameters.body was null or undefined when calling couponServiceCreate.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request(
      {
        path: `/coupon/coupon`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: CouponCreateReqToJSON(requestParameters.body),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) => IdRspFromJSON(jsonValue));
  }

  /**
   * 创建
   */
  async couponServiceCreate(
    requestParameters: CouponServiceCreateRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<IdRsp> {
    const response = await this.couponServiceCreateRaw(requestParameters, initOverrides);
    return await response.value();
  }

  /**
   * 销毁用户优惠券
   */
  async couponServiceDestroyUserCouponRaw(
    requestParameters: CouponServiceDestroyUserCouponRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<object>> {
    if (requestParameters.body === null || requestParameters.body === undefined) {
      throw new runtime.RequiredError(
        'body',
        'Required parameter requestParameters.body was null or undefined when calling couponServiceDestroyUserCoupon.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request(
      {
        path: `/coupon/user_coupon_destroy`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: CouponUserCouponReqToJSON(requestParameters.body),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse<any>(response);
  }

  /**
   * 销毁用户优惠券
   */
  async couponServiceDestroyUserCoupon(
    requestParameters: CouponServiceDestroyUserCouponRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<object> {
    const response = await this.couponServiceDestroyUserCouponRaw(requestParameters, initOverrides);
    return await response.value();
  }

  /**
   * 查询列表
   */
  async couponServiceFindRaw(
    requestParameters: CouponServiceFindRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<Coupons>> {
    const queryParameters: any = {};

    if (requestParameters.status !== undefined) {
      queryParameters['status'] = requestParameters.status;
    }

    if (requestParameters.kind !== undefined) {
      queryParameters['kind'] = requestParameters.kind;
    }

    if (requestParameters.currency !== undefined) {
      queryParameters['currency'] = requestParameters.currency;
    }

    if (requestParameters.pageLimit !== undefined) {
      queryParameters['page.limit'] = requestParameters.pageLimit;
    }

    if (requestParameters.pageOffset !== undefined) {
      queryParameters['page.offset'] = requestParameters.pageOffset;
    }

    if (requestParameters.allData !== undefined) {
      queryParameters['allData'] = requestParameters.allData;
    }

    if (requestParameters.userId !== undefined) {
      queryParameters['userId'] = requestParameters.userId;
    }

    if (requestParameters.costUsed !== undefined) {
      queryParameters['costUsed'] = requestParameters.costUsed;
    }

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/coupon/coupons`,
        method: 'GET',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) => CouponsFromJSON(jsonValue));
  }

  /**
   * 查询列表
   */
  async couponServiceFind(
    requestParameters: CouponServiceFindRequest = {},
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<Coupons> {
    const response = await this.couponServiceFindRaw(requestParameters, initOverrides);
    return await response.value();
  }
}

/**
 * @export
 */
export const CouponServiceFindKindEnum = {
  SysCoupon: 'sys_coupon',
  RoomShare: 'room_share',
  NftRebate: 'nft_rebate',
  UserInvite: 'user_invite',
  RoomCheckIn: 'room_check_in',
  Reward: 'reward',
  OrderComment: 'order_comment',
  UserUsed: 'user_used',
  UserRegister: 'user_register',
  FinishUserInfo: 'finish_user_info',
  SysAdminOperate: 'sys_admin_operate',
  StoreRegister: 'store_register',
  UserExchange: 'user_exchange',
  LuckyDrawPoints: 'lucky_draw_points',
  LuckyDrawConsume: 'lucky_draw_consume',
} as const;
export type CouponServiceFindKindEnum =
  (typeof CouponServiceFindKindEnum)[keyof typeof CouponServiceFindKindEnum];

/* tslint:disable */
/* eslint-disable */
/**
 * chameleon service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: none@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import type { RpcStatus, Sharing, V1ErrCode } from '../models/index';
import {
  RpcStatusFromJSON,
  RpcStatusToJSON,
  SharingFromJSON,
  SharingToJSON,
  V1ErrCodeFromJSON,
  V1ErrCodeToJSON,
} from '../models/index';

export interface SharePublicServiceDetailRequest {
  shareId: string;
}

/**
 *
 */
export class SharePublicServiceApi extends runtime.BaseAPI {
  /**
   * 分享详情
   */
  async sharePublicServiceDetailRaw(
    requestParameters: SharePublicServiceDetailRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<Sharing>> {
    if (requestParameters.shareId === null || requestParameters.shareId === undefined) {
      throw new runtime.RequiredError(
        'shareId',
        'Required parameter requestParameters.shareId was null or undefined when calling sharePublicServiceDetail.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/sharing/shares/{shareId}`.replace(
          `{${'shareId'}}`,
          encodeURIComponent(String(requestParameters.shareId)),
        ),
        method: 'GET',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) => SharingFromJSON(jsonValue));
  }

  /**
   * 分享详情
   */
  async sharePublicServiceDetail(
    requestParameters: SharePublicServiceDetailRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<Sharing> {
    const response = await this.sharePublicServiceDetailRaw(requestParameters, initOverrides);
    return await response.value();
  }
}

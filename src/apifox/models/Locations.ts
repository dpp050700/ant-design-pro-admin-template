/* tslint:disable */
/* eslint-disable */
/**
 * chameleon service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: none@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1Location } from './V1Location';
import { V1LocationFromJSON, V1LocationFromJSONTyped, V1LocationToJSON } from './V1Location';

/**
 *
 * @export
 * @interface Locations
 */
export interface Locations {
  /**
   *
   * @type {Array<V1Location>}
   * @memberof Locations
   */
  locations?: Array<V1Location>;
}

/**
 * Check if a given object implements the Locations interface.
 */
export function instanceOfLocations(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function LocationsFromJSON(json: any): Locations {
  return LocationsFromJSONTyped(json, false);
}

export function LocationsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Locations {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    locations: !exists(json, 'locations')
      ? undefined
      : (json['locations'] as Array<any>).map(V1LocationFromJSON),
  };
}

export function LocationsToJSON(value?: Locations | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    locations:
      value.locations === undefined
        ? undefined
        : (value.locations as Array<any>).map(V1LocationToJSON),
  };
}

/* tslint:disable */
/* eslint-disable */
/**
 * chameleon service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: none@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface BathingFacilities
 */
export interface BathingFacilities {
  /**
   *
   * @type {boolean}
   * @memberof BathingFacilities
   */
  bathtub: boolean;
  /**
   *
   * @type {boolean}
   * @memberof BathingFacilities
   */
  hotWater: boolean;
  /**
   *
   * @type {boolean}
   * @memberof BathingFacilities
   */
  bathHeater: boolean;
}

/**
 * Check if a given object implements the BathingFacilities interface.
 */
export function instanceOfBathingFacilities(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'bathtub' in value;
  isInstance = isInstance && 'hotWater' in value;
  isInstance = isInstance && 'bathHeater' in value;

  return isInstance;
}

export function BathingFacilitiesFromJSON(json: any): BathingFacilities {
  return BathingFacilitiesFromJSONTyped(json, false);
}

export function BathingFacilitiesFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): BathingFacilities {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    bathtub: json['bathtub'],
    hotWater: json['hotWater'],
    bathHeater: json['bathHeater'],
  };
}

export function BathingFacilitiesToJSON(value?: BathingFacilities | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    bathtub: value.bathtub,
    hotWater: value.hotWater,
    bathHeater: value.bathHeater,
  };
}

/* tslint:disable */
/* eslint-disable */
/**
 * chameleon service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: none@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GeoLocation } from './GeoLocation';
import { GeoLocationFromJSON, GeoLocationFromJSONTyped, GeoLocationToJSON } from './GeoLocation';

/**
 *
 * @export
 * @interface ReportLocationBody
 */
export interface ReportLocationBody {
  /**
   *
   * @type {GeoLocation}
   * @memberof ReportLocationBody
   */
  location?: GeoLocation;
}

/**
 * Check if a given object implements the ReportLocationBody interface.
 */
export function instanceOfReportLocationBody(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function ReportLocationBodyFromJSON(json: any): ReportLocationBody {
  return ReportLocationBodyFromJSONTyped(json, false);
}

export function ReportLocationBodyFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ReportLocationBody {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    location: !exists(json, 'location') ? undefined : GeoLocationFromJSON(json['location']),
  };
}

export function ReportLocationBodyToJSON(value?: ReportLocationBody | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    location: GeoLocationToJSON(value.location),
  };
}

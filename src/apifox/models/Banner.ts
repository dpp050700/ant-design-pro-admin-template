/* tslint:disable */
/* eslint-disable */
/**
 * chameleon service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: none@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BannerType } from './BannerType';
import { BannerTypeFromJSON, BannerTypeFromJSONTyped, BannerTypeToJSON } from './BannerType';
import type { Language } from './Language';
import { LanguageFromJSON, LanguageFromJSONTyped, LanguageToJSON } from './Language';

/**
 *
 * @export
 * @interface Banner
 */
export interface Banner {
  /**
   *
   * @type {string}
   * @memberof Banner
   */
  readonly id?: string;
  /**
   *
   * @type {Date}
   * @memberof Banner
   */
  readonly createdAt?: Date;
  /**
   *
   * @type {Date}
   * @memberof Banner
   */
  readonly updatedAt?: Date;
  /**
   *
   * @type {Array<string>}
   * @memberof Banner
   */
  images?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof Banner
   */
  title?: string;
  /**
   *
   * @type {string}
   * @memberof Banner
   */
  description?: string;
  /**
   *
   * @type {BannerType}
   * @memberof Banner
   */
  type: BannerType;
  /**
   *
   * @type {Language}
   * @memberof Banner
   */
  language?: Language;
  /**
   *
   * @type {object}
   * @memberof Banner
   */
  details?: object;
}

/**
 * Check if a given object implements the Banner interface.
 */
export function instanceOfBanner(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'type' in value;

  return isInstance;
}

export function BannerFromJSON(json: any): Banner {
  return BannerFromJSONTyped(json, false);
}

export function BannerFromJSONTyped(json: any, ignoreDiscriminator: boolean): Banner {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, 'id') ? undefined : json['id'],
    createdAt: !exists(json, 'createdAt') ? undefined : new Date(json['createdAt']),
    updatedAt: !exists(json, 'updatedAt') ? undefined : new Date(json['updatedAt']),
    images: !exists(json, 'images') ? undefined : json['images'],
    title: !exists(json, 'title') ? undefined : json['title'],
    description: !exists(json, 'description') ? undefined : json['description'],
    type: BannerTypeFromJSON(json['type']),
    language: !exists(json, 'language') ? undefined : LanguageFromJSON(json['language']),
    details: !exists(json, 'details') ? undefined : json['details'],
  };
}

export function BannerToJSON(value?: Banner | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    images: value.images,
    title: value.title,
    description: value.description,
    type: BannerTypeToJSON(value.type),
    language: LanguageToJSON(value.language),
    details: value.details,
  };
}

/* tslint:disable */
/* eslint-disable */
/**
 * chameleon service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: none@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface SpecialServiceDetail
 */
export interface SpecialServiceDetail {
  /**
   *
   * @type {string}
   * @memberof SpecialServiceDetail
   */
  appointmentMethod?: string;
  /**
   *
   * @type {string}
   * @memberof SpecialServiceDetail
   */
  serviceTime?: string;
  /**
   *
   * @type {string}
   * @memberof SpecialServiceDetail
   */
  usageRules?: string;
  /**
   *
   * @type {string}
   * @memberof SpecialServiceDetail
   */
  introduction?: string;
}

/**
 * Check if a given object implements the SpecialServiceDetail interface.
 */
export function instanceOfSpecialServiceDetail(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function SpecialServiceDetailFromJSON(json: any): SpecialServiceDetail {
  return SpecialServiceDetailFromJSONTyped(json, false);
}

export function SpecialServiceDetailFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): SpecialServiceDetail {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    appointmentMethod: !exists(json, 'appointmentMethod') ? undefined : json['appointmentMethod'],
    serviceTime: !exists(json, 'serviceTime') ? undefined : json['serviceTime'],
    usageRules: !exists(json, 'usageRules') ? undefined : json['usageRules'],
    introduction: !exists(json, 'introduction') ? undefined : json['introduction'],
  };
}

export function SpecialServiceDetailToJSON(value?: SpecialServiceDetail | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    appointmentMethod: value.appointmentMethod,
    serviceTime: value.serviceTime,
    usageRules: value.usageRules,
    introduction: value.introduction,
  };
}

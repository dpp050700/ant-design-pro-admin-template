/* tslint:disable */
/* eslint-disable */
/**
 * chameleon service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: none@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { VirtualGoodDetail } from './VirtualGoodDetail';
import {
  VirtualGoodDetailFromJSON,
  VirtualGoodDetailFromJSONTyped,
  VirtualGoodDetailToJSON,
} from './VirtualGoodDetail';

/**
 *
 * @export
 * @interface UpdateVirtualGoodBody
 */
export interface UpdateVirtualGoodBody {
  /**
   *
   * @type {string}
   * @memberof UpdateVirtualGoodBody
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof UpdateVirtualGoodBody
   */
  thumbnail?: string | null;
  /**
   *
   * @type {number}
   * @memberof UpdateVirtualGoodBody
   */
  points?: number | null;
  /**
   *
   * @type {Array<string>}
   * @memberof UpdateVirtualGoodBody
   */
  images?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof UpdateVirtualGoodBody
   */
  description?: string | null;
  /**
   *
   * @type {VirtualGoodDetail}
   * @memberof UpdateVirtualGoodBody
   */
  detail?: VirtualGoodDetail;
  /**
   *
   * @type {number}
   * @memberof UpdateVirtualGoodBody
   */
  count?: number | null;
}

/**
 * Check if a given object implements the UpdateVirtualGoodBody interface.
 */
export function instanceOfUpdateVirtualGoodBody(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function UpdateVirtualGoodBodyFromJSON(json: any): UpdateVirtualGoodBody {
  return UpdateVirtualGoodBodyFromJSONTyped(json, false);
}

export function UpdateVirtualGoodBodyFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): UpdateVirtualGoodBody {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    name: !exists(json, 'name') ? undefined : json['name'],
    thumbnail: !exists(json, 'thumbnail') ? undefined : json['thumbnail'],
    points: !exists(json, 'points') ? undefined : json['points'],
    images: !exists(json, 'images') ? undefined : json['images'],
    description: !exists(json, 'description') ? undefined : json['description'],
    detail: !exists(json, 'detail') ? undefined : VirtualGoodDetailFromJSON(json['detail']),
    count: !exists(json, 'count') ? undefined : json['count'],
  };
}

export function UpdateVirtualGoodBodyToJSON(value?: UpdateVirtualGoodBody | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    name: value.name,
    thumbnail: value.thumbnail,
    points: value.points,
    images: value.images,
    description: value.description,
    detail: VirtualGoodDetailToJSON(value.detail),
    count: value.count,
  };
}

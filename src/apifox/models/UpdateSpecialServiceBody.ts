/* tslint:disable */
/* eslint-disable */
/**
 * chameleon service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: none@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SpecialService } from './SpecialService';
import {
  SpecialServiceFromJSON,
  SpecialServiceFromJSONTyped,
  SpecialServiceToJSON,
} from './SpecialService';

/**
 *
 * @export
 * @interface UpdateSpecialServiceBody
 */
export interface UpdateSpecialServiceBody {
  /**
   *
   * @type {SpecialService}
   * @memberof UpdateSpecialServiceBody
   */
  specialService?: SpecialService;
}

/**
 * Check if a given object implements the UpdateSpecialServiceBody interface.
 */
export function instanceOfUpdateSpecialServiceBody(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function UpdateSpecialServiceBodyFromJSON(json: any): UpdateSpecialServiceBody {
  return UpdateSpecialServiceBodyFromJSONTyped(json, false);
}

export function UpdateSpecialServiceBodyFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): UpdateSpecialServiceBody {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    specialService: !exists(json, 'specialService')
      ? undefined
      : SpecialServiceFromJSON(json['specialService']),
  };
}

export function UpdateSpecialServiceBodyToJSON(value?: UpdateSpecialServiceBody | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    specialService: SpecialServiceToJSON(value.specialService),
  };
}

/* tslint:disable */
/* eslint-disable */
/**
 * chameleon service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: none@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Language } from './Language';
import { LanguageFromJSON, LanguageFromJSONTyped, LanguageToJSON } from './Language';

/**
 *
 * @export
 * @interface RoomInfra
 */
export interface RoomInfra {
  /**
   *
   * @type {string}
   * @memberof RoomInfra
   */
  id?: string | null;
  /**
   *
   * @type {Date}
   * @memberof RoomInfra
   */
  readonly createdAt: Date | null;
  /**
   *
   * @type {Date}
   * @memberof RoomInfra
   */
  readonly updatedAt: Date | null;
  /**
   *
   * @type {string}
   * @memberof RoomInfra
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof RoomInfra
   */
  icon?: string | null;
  /**
   *
   * @type {string}
   * @memberof RoomInfra
   */
  catalog?: string;
  /**
   *
   * @type {Language}
   * @memberof RoomInfra
   */
  language?: Language;
}

/**
 * Check if a given object implements the RoomInfra interface.
 */
export function instanceOfRoomInfra(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'createdAt' in value;
  isInstance = isInstance && 'updatedAt' in value;

  return isInstance;
}

export function RoomInfraFromJSON(json: any): RoomInfra {
  return RoomInfraFromJSONTyped(json, false);
}

export function RoomInfraFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoomInfra {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, 'id') ? undefined : json['id'],
    createdAt: json['createdAt'] === null ? null : new Date(json['createdAt']),
    updatedAt: json['updatedAt'] === null ? null : new Date(json['updatedAt']),
    name: !exists(json, 'name') ? undefined : json['name'],
    icon: !exists(json, 'icon') ? undefined : json['icon'],
    catalog: !exists(json, 'catalog') ? undefined : json['catalog'],
    language: !exists(json, 'language') ? undefined : LanguageFromJSON(json['language']),
  };
}

export function RoomInfraToJSON(value?: RoomInfra | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    name: value.name,
    icon: value.icon,
    catalog: value.catalog,
    language: LanguageToJSON(value.language),
  };
}

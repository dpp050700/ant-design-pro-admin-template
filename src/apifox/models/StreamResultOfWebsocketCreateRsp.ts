/* tslint:disable */
/* eslint-disable */
/**
 * chameleon service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: none@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RpcStatus } from './RpcStatus';
import { RpcStatusFromJSON, RpcStatusFromJSONTyped, RpcStatusToJSON } from './RpcStatus';
import type { WebsocketCreateRsp } from './WebsocketCreateRsp';
import {
  WebsocketCreateRspFromJSON,
  WebsocketCreateRspFromJSONTyped,
  WebsocketCreateRspToJSON,
} from './WebsocketCreateRsp';

/**
 *
 * @export
 * @interface StreamResultOfWebsocketCreateRsp
 */
export interface StreamResultOfWebsocketCreateRsp {
  /**
   *
   * @type {WebsocketCreateRsp}
   * @memberof StreamResultOfWebsocketCreateRsp
   */
  result?: WebsocketCreateRsp;
  /**
   *
   * @type {RpcStatus}
   * @memberof StreamResultOfWebsocketCreateRsp
   */
  error?: RpcStatus;
}

/**
 * Check if a given object implements the StreamResultOfWebsocketCreateRsp interface.
 */
export function instanceOfStreamResultOfWebsocketCreateRsp(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function StreamResultOfWebsocketCreateRspFromJSON(
  json: any,
): StreamResultOfWebsocketCreateRsp {
  return StreamResultOfWebsocketCreateRspFromJSONTyped(json, false);
}

export function StreamResultOfWebsocketCreateRspFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): StreamResultOfWebsocketCreateRsp {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    result: !exists(json, 'result') ? undefined : WebsocketCreateRspFromJSON(json['result']),
    error: !exists(json, 'error') ? undefined : RpcStatusFromJSON(json['error']),
  };
}

export function StreamResultOfWebsocketCreateRspToJSON(
  value?: StreamResultOfWebsocketCreateRsp | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    result: WebsocketCreateRspToJSON(value.result),
    error: RpcStatusToJSON(value.error),
  };
}

/* tslint:disable */
/* eslint-disable */
/**
 * chameleon service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: none@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SortOrder } from './SortOrder';
import { SortOrderFromJSON, SortOrderFromJSONTyped, SortOrderToJSON } from './SortOrder';

/**
 *
 * @export
 * @interface AttractionFindReqOrderField
 */
export interface AttractionFindReqOrderField {
  /**
   *
   * @type {SortOrder}
   * @memberof AttractionFindReqOrderField
   */
  updatedAt?: SortOrder;
  /**
   *
   * @type {SortOrder}
   * @memberof AttractionFindReqOrderField
   */
  name?: SortOrder;
  /**
   *
   * @type {SortOrder}
   * @memberof AttractionFindReqOrderField
   */
  country?: SortOrder;
  /**
   *
   * @type {SortOrder}
   * @memberof AttractionFindReqOrderField
   */
  city?: SortOrder;
  /**
   *
   * @type {SortOrder}
   * @memberof AttractionFindReqOrderField
   */
  language?: SortOrder;
  /**
   *
   * @type {SortOrder}
   * @memberof AttractionFindReqOrderField
   */
  isTopped?: SortOrder;
  /**
   *
   * @type {SortOrder}
   * @memberof AttractionFindReqOrderField
   */
  nearbyRoomCount?: SortOrder;
}

/**
 * Check if a given object implements the AttractionFindReqOrderField interface.
 */
export function instanceOfAttractionFindReqOrderField(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function AttractionFindReqOrderFieldFromJSON(json: any): AttractionFindReqOrderField {
  return AttractionFindReqOrderFieldFromJSONTyped(json, false);
}

export function AttractionFindReqOrderFieldFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): AttractionFindReqOrderField {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    updatedAt: !exists(json, 'updatedAt') ? undefined : SortOrderFromJSON(json['updatedAt']),
    name: !exists(json, 'name') ? undefined : SortOrderFromJSON(json['name']),
    country: !exists(json, 'country') ? undefined : SortOrderFromJSON(json['country']),
    city: !exists(json, 'city') ? undefined : SortOrderFromJSON(json['city']),
    language: !exists(json, 'language') ? undefined : SortOrderFromJSON(json['language']),
    isTopped: !exists(json, 'isTopped') ? undefined : SortOrderFromJSON(json['isTopped']),
    nearbyRoomCount: !exists(json, 'nearbyRoomCount')
      ? undefined
      : SortOrderFromJSON(json['nearbyRoomCount']),
  };
}

export function AttractionFindReqOrderFieldToJSON(value?: AttractionFindReqOrderField | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    updatedAt: SortOrderToJSON(value.updatedAt),
    name: SortOrderToJSON(value.name),
    country: SortOrderToJSON(value.country),
    city: SortOrderToJSON(value.city),
    language: SortOrderToJSON(value.language),
    isTopped: SortOrderToJSON(value.isTopped),
    nearbyRoomCount: SortOrderToJSON(value.nearbyRoomCount),
  };
}

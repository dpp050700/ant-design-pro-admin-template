/* tslint:disable */
/* eslint-disable */
/**
 * chameleon service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: none@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StoryOperationType } from './StoryOperationType';
import {
  StoryOperationTypeFromJSON,
  StoryOperationTypeFromJSONTyped,
  StoryOperationTypeToJSON,
} from './StoryOperationType';
import type { UserInfo } from './UserInfo';
import { UserInfoFromJSON, UserInfoFromJSONTyped, UserInfoToJSON } from './UserInfo';

/**
 *
 * @export
 * @interface StoryOperation
 */
export interface StoryOperation {
  /**
   *
   * @type {string}
   * @memberof StoryOperation
   */
  readonly id: string;
  /**
   *
   * @type {StoryOperationType}
   * @memberof StoryOperation
   */
  operation: StoryOperationType;
  /**
   *
   * @type {UserInfo}
   * @memberof StoryOperation
   */
  userInfo: UserInfo;
  /**
   *
   * @type {string}
   * @memberof StoryOperation
   */
  readonly userId: string;
  /**
   *
   * @type {string}
   * @memberof StoryOperation
   */
  readonly storyId: string;
}

/**
 * Check if a given object implements the StoryOperation interface.
 */
export function instanceOfStoryOperation(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'id' in value;
  isInstance = isInstance && 'operation' in value;
  isInstance = isInstance && 'userInfo' in value;
  isInstance = isInstance && 'userId' in value;
  isInstance = isInstance && 'storyId' in value;

  return isInstance;
}

export function StoryOperationFromJSON(json: any): StoryOperation {
  return StoryOperationFromJSONTyped(json, false);
}

export function StoryOperationFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): StoryOperation {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json['id'],
    operation: StoryOperationTypeFromJSON(json['operation']),
    userInfo: UserInfoFromJSON(json['userInfo']),
    userId: json['userId'],
    storyId: json['storyId'],
  };
}

export function StoryOperationToJSON(value?: StoryOperation | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    operation: StoryOperationTypeToJSON(value.operation),
    userInfo: UserInfoToJSON(value.userInfo),
  };
}

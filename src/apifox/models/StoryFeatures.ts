/* tslint:disable */
/* eslint-disable */
/**
 * chameleon service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: none@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface StoryFeatures
 */
export interface StoryFeatures {
  /**
   *
   * @type {boolean}
   * @memberof StoryFeatures
   */
  likeCount?: boolean | null;
  /**
   *
   * @type {boolean}
   * @memberof StoryFeatures
   */
  commentCount?: boolean | null;
  /**
   *
   * @type {boolean}
   * @memberof StoryFeatures
   */
  likeList?: boolean | null;
  /**
   *
   * @type {boolean}
   * @memberof StoryFeatures
   */
  commentList?: boolean | null;
}

/**
 * Check if a given object implements the StoryFeatures interface.
 */
export function instanceOfStoryFeatures(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function StoryFeaturesFromJSON(json: any): StoryFeatures {
  return StoryFeaturesFromJSONTyped(json, false);
}

export function StoryFeaturesFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoryFeatures {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    likeCount: !exists(json, 'likeCount') ? undefined : json['likeCount'],
    commentCount: !exists(json, 'commentCount') ? undefined : json['commentCount'],
    likeList: !exists(json, 'likeList') ? undefined : json['likeList'],
    commentList: !exists(json, 'commentList') ? undefined : json['commentList'],
  };
}

export function StoryFeaturesToJSON(value?: StoryFeatures | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    likeCount: value.likeCount,
    commentCount: value.commentCount,
    likeList: value.likeList,
    commentList: value.commentList,
  };
}

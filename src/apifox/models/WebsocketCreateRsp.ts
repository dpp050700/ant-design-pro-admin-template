/* tslint:disable */
/* eslint-disable */
/**
 * chameleon service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: none@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ErrorsErrCode } from './ErrorsErrCode';
import {
  ErrorsErrCodeFromJSON,
  ErrorsErrCodeFromJSONTyped,
  ErrorsErrCodeToJSON,
} from './ErrorsErrCode';

/**
 *
 * @export
 * @interface WebsocketCreateRsp
 */
export interface WebsocketCreateRsp {
  /**
   *
   * @type {ErrorsErrCode}
   * @memberof WebsocketCreateRsp
   */
  error?: ErrorsErrCode;
  /**
   *
   * @type {object}
   * @memberof WebsocketCreateRsp
   */
  location?: object;
  /**
   *
   * @type {string}
   * @memberof WebsocketCreateRsp
   */
  echo?: string;
}

/**
 * Check if a given object implements the WebsocketCreateRsp interface.
 */
export function instanceOfWebsocketCreateRsp(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function WebsocketCreateRspFromJSON(json: any): WebsocketCreateRsp {
  return WebsocketCreateRspFromJSONTyped(json, false);
}

export function WebsocketCreateRspFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): WebsocketCreateRsp {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    error: !exists(json, 'error') ? undefined : ErrorsErrCodeFromJSON(json['error']),
    location: !exists(json, 'location') ? undefined : json['location'],
    echo: !exists(json, 'echo') ? undefined : json['echo'],
  };
}

export function WebsocketCreateRspToJSON(value?: WebsocketCreateRsp | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    error: ErrorsErrCodeToJSON(value.error),
    location: value.location,
    echo: value.echo,
  };
}

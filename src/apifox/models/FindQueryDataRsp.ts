/* tslint:disable */
/* eslint-disable */
/**
 * chameleon service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: none@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RoomInfra } from './RoomInfra';
import { RoomInfraFromJSON, RoomInfraFromJSONTyped, RoomInfraToJSON } from './RoomInfra';
import type { SpecialServiceCatalog } from './SpecialServiceCatalog';
import {
  SpecialServiceCatalogFromJSON,
  SpecialServiceCatalogFromJSONTyped,
  SpecialServiceCatalogToJSON,
} from './SpecialServiceCatalog';
import type { V1Tag } from './V1Tag';
import { V1TagFromJSON, V1TagFromJSONTyped, V1TagToJSON } from './V1Tag';

/**
 *
 * @export
 * @interface FindQueryDataRsp
 */
export interface FindQueryDataRsp {
  /**
   *
   * @type {Array<RoomInfra>}
   * @memberof FindQueryDataRsp
   */
  roomInfras?: Array<RoomInfra>;
  /**
   *
   * @type {Array<SpecialServiceCatalog>}
   * @memberof FindQueryDataRsp
   */
  specialServiceCatalogs?: Array<SpecialServiceCatalog>;
  /**
   *
   * @type {Array<V1Tag>}
   * @memberof FindQueryDataRsp
   */
  tags?: Array<V1Tag>;
}

/**
 * Check if a given object implements the FindQueryDataRsp interface.
 */
export function instanceOfFindQueryDataRsp(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function FindQueryDataRspFromJSON(json: any): FindQueryDataRsp {
  return FindQueryDataRspFromJSONTyped(json, false);
}

export function FindQueryDataRspFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): FindQueryDataRsp {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    roomInfras: !exists(json, 'roomInfras')
      ? undefined
      : (json['roomInfras'] as Array<any>).map(RoomInfraFromJSON),
    specialServiceCatalogs: !exists(json, 'specialServiceCatalogs')
      ? undefined
      : (json['specialServiceCatalogs'] as Array<any>).map(SpecialServiceCatalogFromJSON),
    tags: !exists(json, 'tags') ? undefined : (json['tags'] as Array<any>).map(V1TagFromJSON),
  };
}

export function FindQueryDataRspToJSON(value?: FindQueryDataRsp | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    roomInfras:
      value.roomInfras === undefined
        ? undefined
        : (value.roomInfras as Array<any>).map(RoomInfraToJSON),
    specialServiceCatalogs:
      value.specialServiceCatalogs === undefined
        ? undefined
        : (value.specialServiceCatalogs as Array<any>).map(SpecialServiceCatalogToJSON),
    tags: value.tags === undefined ? undefined : (value.tags as Array<any>).map(V1TagToJSON),
  };
}
